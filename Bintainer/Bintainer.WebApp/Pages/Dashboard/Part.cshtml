@page "/dashboard/part"
@using Bintainer.WebApp.Models
@model PartModel
@{
}

<link rel="stylesheet" href="~/css/hierarchy-select.min.css">
<link rel="stylesheet" href="~/css/autocomplete.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5/dist/js/bootstrap.bundle.min.js" type="module"></script> 
<style>
    ::placeholder {
        font-size: 12px;        
        font-style: italic;
    }

    .input-sharp {
        height: 30px; /* Reduced height */
        border-radius: 0; /* Sharp corners */
        border: 1px solid #ced4da; /* Custom border color */
        background-color: #ffffff; /* Background color */
        color: #002060; /* Text color */
    }

    .load-button-sharp {
        height: 30px; /* Reduced height */
        border-radius: 0; /* Sharp corners */        
    }

    .input-sharp:focus {
        border-color: #0062cc; /* Focus border color */
        box-shadow: 0 0 0 0.2rem rgba(0, 98, 204, 0.25); /* Focus glow effect */
    }


    .button-row {
        display: flex;
        align-items: center; /* Vertically center content */
        height: 30px; /* Set height to 30px */
    }    
    /* Style for the button inside .button-row */
    .button-row .btn {
            border-radius: 0; /* Sharp corners for button */
            margin-right: 10px; /* Add margin between button and select */
            font-size: 14px; /* Reduce font size */
    }
    /* Style for the select inside .button-row */
    .button-row select {
            height: 100%; /* Fill the height of the .button-row */
            border-radius: 0; /* Sharp corners for select */
            border: none; /* Remove default border */
            padding: 5px; /* Adjust padding */
            font-size: 14px; /* Reduce font size */
            width: max-content; /* Fit width to content */
    }

    form .error {
        color: #ff0000;
    }
</style>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active" aria-current="page" id="create-tab" data-bs-toggle="tab" data-bs-target="#create-part" href="#">Create</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="update-tab" data-bs-toggle="tab" data-bs-target="#update-part" href="#">Update</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="arrange-tab" data-bs-toggle="tab" data-bs-target="#arrange-part" href="#">Arrange</a>
    </li>
</ul>

<div class="tab-content">
    <div id="create-part" class="tab-pane fade show active" role="tabpanel" aria-labelledby="create-tab">
        <div class="container">
            <div class="row">
                <div class="col-md-8" style="margin-left: 10px;">
                    <form id="myForm" class="well form-horizontal" method="post">
                        <fieldset>
                            <legend><h2>Part</h2></legend>
                            <hr />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Part Name</label>
                                        <input id="partName" name="partName" placeholder="e.g., 2N2222A" class="form-control  input-sharp" required="required" type="text">
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Description</label>
                                        <input id="description" name="description" placeholder="e.g., TRANSISTOR DIS.800mA 50V NPN TO-18" class="form-control  input-sharp" required="required" type="text">
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Supplier</label>
                                        <input id="supplier" name="supplier" placeholder="e.g., Digikey" class="form-control  input-sharp" type="text">
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Package/Footprint</label>
                                        <input type="text" class="form-control  input-sharp autocomplete" id="packageInput" placeholder="e.g., SOIC" />
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Category</label>
                                        <select id="categorySelect" class="form-select form-select-sm"
                                                required="required"
                                                asp-items="@(new SelectList(Model.Category,nameof(PartCategory.Id),nameof(PartCategory.Name)))">
                                            <option value="">Select Category</option>
                                        </select>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Group</label>
                                        <input type="text" class="form-control  input-sharp autocomplete" id="groupInput" placeholder="e.g., Usb" />
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <div class="mb-4"></div>
                        <fieldset>
                            <legend><h2>Attributes</h2></legend>
                            <hr />
                            <div class="button-row align-items-start">
                                <div class="col-4">
                                    <select id="templateList" class="form-select form-select-lg mb-3 w-100"
                                            aria-label=".form-select-lg example"
                                            asp-items="@(new SelectList(Model.AttributeTemplatesTable,"Key","Value"))"
                                            target-table="attributeTable">
                                        <option selected value="">Templates</option>
                                    </select>
                                </div>
                            </div>
                            <div style="margin-bottom: 20px;"></div>
                            <table class="table" id="attributeTable">
                                <thead>
                                    <tr>
                                        <th>Product Attribute</th>
                                        <th>Attribute Value</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="productSpecTable"></tbody>
                            </table>
                        </fieldset>
                        <div class="mb-4"></div>
                        <fieldset>
                            <legend><h2>Suppliers</h2></legend>
                            <hr />
                            <table class="table" id="supplierTable">
                                <thead>
                                    <tr>
                                        <th>Supplier</th>
                                        <th>Part Number</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody id="supplierPartNumberTable">
                                    <tr>
                                        <td class="dtable-col1">
                                            <span>
                                                Digikey
                                            </span>
                                        </td>
                                        <td class="dtable-col2">
                                            <input type="text" class="form-control input-sharp" id="digikeyPartNumber" placeholder="Digikey part number">
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-success button-row" id="fetchDigikey" target-table="attributeTable">Fetch </button>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="dtable-col1">
                                            <span>
                                                Mouser
                                            </span>
                                        </td>
                                        <td class="dtable-col2">
                                            <input type="text" class="form-control input-sharp" placeholder="Mouser part number">
                                        </td>
                                        <td>
                                            <button type="button" class="btn btn-success button-row">Fetch </button>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </fieldset>
                        <div class="button-row align-items-end justify-content-end mt-5">
                            @* <button type="button" class="btn btn-danger">Cancel</button> *@
                            <button type="submit" class="btn btn-success" id="createPartBtn">Create</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-2">
                    <div class="card card-custom">
                        <button type="button" class="btn btn-secondary load-button-sharp">Part</button>
                        <img src="~/image/microchip.png" id="partImage" class="img-fluid" alt="part image" />
                    </div>
                    <div class="card card-custom">
                        <button type="button" class="btn btn-secondary load-button-sharp">Footprint</button>
                        <img src="~/image/pinout.png" class="img-fluid" alt="footpring" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="update-part" class="tab-pane fade" role="tabpanel" aria-labelledby="update-tab"> 
        <div class="card mt-5">
            <div class="card-header">
                <i class="fa fa-search"></i>&nbsp; Search part
            </div>
            <div class="card-body">
                <form class="row" method="post" asp-page-handler="SearchForPart">
                    <div class="col-md-9">
                        <div class="row align-items-center">
                            <div class="col-md-2">
                                <div class="row">
                                    <label for="partName" class="form-label">Part name</label>
                                </div>      
                            </div>
                            <div class="col-md-4">
                                <input type="text" class="form-control input-sharp " id="searchPartName" placeholder="partName">                                
                            </div>
                            <div class="col-md-1">
                                <button type="button" class="button-row btn btn-primary" id="searchPartBtn">Search</button>
                            </div>
                        </div>
                    </div>
                </form>
                <form class="well form-horizontal" style="margin-top: 20px;">
                    <legend><h2>Attributes</h2></legend>
                    <hr />
                    <fieldset>
                        <div style="margin-bottom: 20px;"></div>
                        <table class="table" id="searchedProductSpecTable">
                            <thead>
                                <tr>
                                    <th>Product Attribute</th>
                                    <th>Attribute Value</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="productAttributeTable"></tbody>
                        </table>
                    </fieldset>
                </form>
                <div class="button-row align-items-start">
                    <button class="btn btn-primary me-2 ms-2" id="addAttribute" target-table="searchedProductSpecTable" style="height:30px">Add Row</button>
                    <button class="btn btn-primary me-2 ms-2" id="updateAttribute" target-table="searchedProductSpecTable" style="height:30px">Update</button>
                </div>
            </div>
        </div>
    </div>
    <div id="arrange-part" class="tab-pane fade" role="tabpanel" aria-labelledby="arrange-part">
        <div class="card mt-5">
            <div class="card-header">
                <i class="fa fa-cog fa-spin"></i>&nbsp; Arrange parts
            </div>
            <div class="card-body">
                <form class="row" method="post" asp-page-handler="ArrangePart">
                    <div class="col-md-9">
                        <div class="row align-items-center">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Part</label>
                                    <select id="arrangePartList" class="form-select form-select-sm"
                                            required="required"
                                            asp-items="@(new SelectList(Model.Part,nameof(Part.Id),nameof(Part.Name)))">
                                        <option value="">Select Category</option>
                                    </select>
                                    <label class="control-label">Section</label>
                                    <select id="arrangePartList" class="form-select form-select-sm"
                                            required="required"
                                            asp-items="@(new SelectList(Model.Part,nameof(Part.Id),nameof(Part.Name)))">
                                        <option value="">Select Category</option>
                                    </select>
                                    <label class="control-label">Coordinate (X,Y)</label>
                                    <div class="row align-items-center">
                                        <div class="col-md-6">
                                            <input type="number" name="section-width" class="form-control input-sharp" min="1" value="1" />
                                        </div>
                                        <div class="col-md-6">
                                            <input type="number" name="section-width" class="form-control input-sharp" min="1" value="1" />
                                        </div>
                                    </div>
                                    
                                    <label class="control-label">Subsection</label>
                                    <div class="row align-items-center">
                                        <div class="col-md-6">
                                            <input type="number" name="subsection" class="form-control input-sharp" min="1" value="1" />
                                        </div>               
                                    </div>

                                    <label class="control-label">Group</label>
                                    <div class="row align-items-center">
                                        <div class="col-md-6">
                                            <input type="text" name="subsection" class="form-control input-sharp" min="1" value="1" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <button type="button" class="button-row btn btn-primary" id="arrangePartBtn" style="margin-top: 20px;">Search</button>
                                    </div>
                                </div>
                            </div>                            

                        </div>
                    </div>
                </form>
                <form class="well form-horizontal" style="margin-top: 20px;">
                    <legend><h2>List</h2></legend>
                    <hr />
                    <fieldset>
                        <div style="margin-bottom: 20px;"></div>
                        <table class="table" id="searchedProductSpecTable">
                            <thead>
                                <tr>
                                    <th>Part Name</th>
                                    <th>Section</th>
                                    <th>Coordinate (X)</th>
                                    <th>Coordinate (Y)</th>
                                    <th>Subsection</th>
                                    <th>Group</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="productAttributeTable"></tbody>
                        </table>
                    </fieldset>
                </form>
@*                 <div class="button-row align-items-start">
                    <button class="btn btn-primary me-2 ms-2" id="addAttribute" target-table="searchedProductSpecTable" style="height:30px">Add Row</button>
                    <button class="btn btn-primary me-2 ms-2" id="updateAttribute" target-table="searchedProductSpecTable" style="height:30px">Update</button>
                </div> *@
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>

<script type="text/template" id="tr_template">
    <td class="dtable-col1"></td>
    <td class="dtable-col2"></td>
    <td><a data-mode='edit' class="action" href="javascript:void(0)">edit</a></td>
    <td><a class="delete" href="javascript:void(0)">delete</a></td>
</script> 


<script type="module">
    import Autocomplete from "https://cdn.jsdelivr.net/gh/lekoala/bootstrap5-autocomplete@master/autocomplete.js";
    const opts = {
        onSelectItem: console.log,
    };    
    var packageList = [];
    var groupList = [];

    @for (int i = 0; i < @Model.Packages.Count; i++)
    {
        @if (Model.Packages[i] != null)
        {
            @:packageList.push({
            @:title: "@Model.Packages[i].Name?.Trim()",  
            @:id: "@(Model.Packages[i].Id)",
            @:data: {
            @:key: @i,
            @:    }
            @:});
        }
    }
    @for (int i = 0; i < @Model.Group.Count; i++)
    {
        @if (Model.Group[i] != null)
        {
            @:groupList.push({
            @:title: "@Model.Group[i].Name?.Trim()",
            @:id: "@(Model.Group[i].Id)",
            @:data: {
            @:key: @i,
            @:    }
            @:});
        }
    }

    Autocomplete.init("#packageInput", {
            items: packageList,
            valueField: "id",
            labelField: "title",
            highlightTyped: true,
            onSelectItem: console.log,
        });   
    Autocomplete.init("#groupInput", {
        items: groupList,
        valueField: "id",
        labelField: "title",
        highlightTyped: true,
        onSelectItem: console.log,
    });

</script>

<script type="text/javascript">
    function isValidUrl(string) {
        try {
            new URL(string);
            return true;
        } catch (_) {
            return false;
        }
    }

    $(document).ready(function () {

        // Disable the buttons by default
        $('#addAttribute').prop('disabled', true);
        $('#updateAttribute').prop('disabled', true);

        // Call the function initially
        $('#templateList').on('change', function (event) {
            var selectedId = document.getElementById("templateList").value;
            var selectedText = $(this).find('option:selected').text();
            $('#attributeName').val(selectedText.trim());
            var targetTableId = $(this).attr('target-table'); // Get the ID from the target-table attribute
            var table = $('#' + targetTableId); // Select the table using the ID
            table.find('tbody').empty();
            $.ajax({
                type: 'POST',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                url: '/dashboard/template?handler=LoadAttributeTable&tableId=' + selectedId,
                contentType: 'application/json',
                success: function (response) {
                    console.log('Data saved successfully:', response);
                    if (table.length) { // Check if the table exists
                        $.each(response, function (index, item) {
                            appendRowToTable(table, item.name, item.value);
                        });                       
                    } else {
                        console.error('Table with ID "' + targetTableId + '" not found.');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error saving data:', status, error);
                    alert('Failed to save data.');
                }
            });

        });        
        $('#addSupplier').on('click', function (event) {
            event.preventDefault();
            var targetTableId = $(this).attr('target-table'); // Get the ID from the target-table attribute
            var table = $('#' + targetTableId); // Select the table using the ID
            if (table.length) { // Check if the table exists
                appendRowToTable(table); // Call the function with the table jQuery object
            } else {
                console.error('Table with ID "' + targetTableId + '" not found.');
            }
        });
        $('.search-dropdown').each(function () {
            var $dropdown = $(this);
            var $input = $dropdown.find('.search-input');
            var $menu = $dropdown.find('.dropdown-menu');

            $input.on('input', function () {
                var inputValue = $input.val();
                var dataAttribute = $input.attr('data-source');
                var results = JSON.parse(dataAttribute);
                var matchingWords = inputValue ? results.filter(word => word.toLowerCase().includes(inputValue.toLowerCase())) : results;

                $menu.find('li').remove(); // Remove existing list items
                populateList(matchingWords, $menu, $dropdown.find('.dropdown-toggle'));
            });
        });
        $('#fetchDigikey').on('click', function (event) {
            event.preventDefault();
            var targetTableId = $(this).attr('target-table');
            var digiKeyPartNumber = $('#digikeyPartNumber').val();
            var table = $('#' + targetTableId);
            table.find('tbody').empty();
            var url = '@Url.Page("Part", "DigikeyParameters")';
            $.ajax({
                url: url,
                type: 'Get',
                data: {
                    partNumber: digiKeyPartNumber
                },
                success: function (response) {
                    console.log('Data saved successfully:', response);
                    if (table.length) { // Check if the table exists
                        $.each(response, function (index, item) {
                            if (item.category === "Parameter") {
                                appendRowToTable(table, item.name, item.value);

                                if (item.name === "Package / Case") {
                                    $('#packageInput').val(item.value);

                                }
                            }
                            if (item.category === "PhotoUrl" && item.value) {                               
                                if (isValidUrl(item.value)) {
                                    $('#partImage').attr('src', item.value);
                                } else {
                                    console.error('Invalid URL:', item.value);
                                }
                            }
                            if (item.category === "DetailedDescription" && item.value){
                                $('#description').val(item.value);
                                $('#partName').val(digiKeyPartNumber);

                            }

                        });
                        $('#supplier').val("DigiKey");
                        // Call the function with the table jQuery object
                    } else {
                        console.error('Table with ID "' + targetTableId + '" not found.');
                    }
                },
                error: function (xhr, status, error) {
                    // Handle any errors here
                    alert('There is an error during the fetch. Please check if the Part Number is correct.');
                    console.error(error);
                }
            });
        });
        $('#searchPartBtn').on('click', function (event) {
            event.preventDefault();
            searchPart(); // Trigger the search
        });
        // Disable buttons if the input is cleared
        // Event handler for pressing "Enter" in the input field
        $('#searchPartName').on('keydown', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault();
                searchPart(); // Trigger the search on Enter key press
            }
        });
        // Disable buttons and clear table if input is cleared
        $('#searchPartName').on('keyup', function () {
            var partName = $(this).val().trim();
            if (partName.length === 0) {
                $('#addAttribute').prop('disabled', true);
                $('#updateAttribute').prop('disabled', true);
                var table = $('#searchedProductSpecTable');
                table.find('tbody').empty(); // Clear table if input is empty
            }
        });
        $('#addAttribute').on('click', function (event) {
            event.preventDefault(); // Prevent default form submission behavior
            //var targetTableId = $(this).attr('searchedProductSpecTable'); // Get the ID from the target-table attribute
            var table = $('#searchedProductSpecTable'); // Select the table using the ID
            if (table.length) { // Check if the table exists
                appendRowToTable(table); // Call the function with the table jQuery object
            } else {
                console.error('Table with ID searchedProductSpecTable not found.');
            }
        });
        $('#updateAttribute').on('click', function (event) {
            event.preventDefault();
            var partName = $('#searchPartName').val();
            var productAttributes = {};
            $('#productAttributeTable tr').each(function () {
                var row = $(this);
                var attribute = row.find('td').eq(0).find('input').val().trim();
                var value = row.find('td').eq(1).find('input').val().trim();
                productAttributes[attribute] = value;
            });

            $.ajax({
                type: 'POST',
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                url: '/dashboard/part?handler=UpdatePartAttribute',
                contentType: 'application/json',
                data: JSON.stringify({ attributes: productAttributes, partName: partName }),
                success: function (response) {
                    console.log('Data saved successfully:', response);
                    alert('Data saved successfully!');
                },
                error: function (xhr, status, error) {
                    console.error('Error saving data:', status, error);
                    alert('Failed to save data.');
                }
            });
           
        });
        $('#createPartBtn').on('click', function (event) {   
            event.preventDefault();
            var validator = $("#myForm").validate();
            var isValid = validator.form();
            if (!isValid) {
                return;                    
            }
            var token = $('input[name="__RequestVerificationToken"]').val();
            // Gather data from the form fields
            var selectedIndex = $('#templateList')[0].selectedIndex;
            //var orderDate = $('#orderDate').val();
            var groupValue = $('#groupInput').val();
            var packageValue = $('#packageInput').val();

            var partData = {
                PartName: $('#partName').val(),
                Description: $('#description').val(),
                Supplier: $('#supplier').val(),                                         
                //OrderNumber: $('#order').val(),
                //OrderQuantity: $('#orderQuantity').val(),
                CategoryId: $('#categorySelect').val(),
                AttributeTemplateId: selectedIndex,
                Attributes: {},
            };
            if (groupValue) {
                partData.Group = groupValue;
            }
            // if (orderDate) {
            //     partData.OrderDate = orderDate;
            // }
            if (packageValue) {
                partData.Package = packageValue;
            }

            //Gather attributes from the attribute table
            $('#attributeTable tbody tr').each(function () {
                var attributeName = $(this).find('.dtable-col1 input').val().trim();
                var attributeValue = $(this).find('.dtable-col2 input').val().trim();

                if (attributeName && attributeValue) {
                    partData.Attributes[attributeName] = attributeValue;
                }
            });

            // Send data to the server
            $.ajax({
                url: '/dashboard/Part?handler=CreatePart',
                dataType: "json",
                type: 'Post',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(partData),
                headers: {
                    'XSRF-TOKEN': token // Include the CSRF token in the request header
                },
                success: function (response) {
                    // Handle successful response
                    console.log(response);
                    event.preventDefault(); // enable validation
                    alert(response.message); // Show success message
                    // Optionally, you can redirect or show a success message
                },
                error: function (xhr, status, error) {
                    // Handle error response
                    console.error('Error:', error);
                    // Optionally, you can show an error message
                }
            });
            
        });

        function searchPart() {
            var number = $('#searchPartName').val().trim();
            var token = $('input[name="__RequestVerificationToken"]').val(); // Extract CSRF token
            var table = $('#searchedProductSpecTable'); // Select the table
            table.find('tbody').empty(); // Clear previous table rows

            if (number.length === 0) {
                alert('Please enter a valid part number.');
                return;
            }

            $.ajax({
                url: '/dashboard/Part?handler=SearchForPart&partNumber=' + number,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN", token);
                },
                contentType: "application/json; charset=utf-8",
                type: 'Post',
                success: function (response) {
                    if (table.length) { // Check if the table exists
                        if (response.length > 0) {
                            $.each(response, function (index, item) {
                                appendRowToTable(table, item.name, item.value);
                            });
                            // Enable buttons if data is successfully fetched
                            $('#addAttribute').prop('disabled', false);
                            $('#updateAttribute').prop('disabled', false);
                        } else {
                            alert('No attributes found for the given part number.');
                        }
                    } else {
                        console.error('Table not found.');
                    }
                },
                error: function (xhr, status, error) {
                    alert('The part number is not valid.');
                    console.error('Error:', error);
                }
            });
        }

    });
</script>

